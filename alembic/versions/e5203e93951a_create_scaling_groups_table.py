"""Create scaling_groups table

Revision ID: e5203e93951a
Revises: 10e39a34eed5
Create Date: 2018-11-12 10:52:08.213726

"""
from datetime import datetime

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import ai.backend.manager.models.base  # noqa
from ai.backend.manager.models import scaling_groups


# revision identifiers, used by Alembic.
revision = 'e5203e93951a'
down_revision = '10e39a34eed5'
branch_labels = None
depends_on = None


prev_kernelstatus_choices = (
    'PREPARING', 'BUILDING', 'RUNNING',
    'RESTARTING', 'RESIZING', 'SUSPENDED',
    'TERMINATING', 'TERMINATED', 'ERROR',
)

prev_kernelstatus = postgresql.ENUM(
    *prev_kernelstatus_choices,
    name='kernelstatus')

curr_kernelstatus_choices = ('PENDING',) + prev_kernelstatus_choices

curr_kernelstatus = postgresql.ENUM(
    *curr_kernelstatus_choices,
    name='kernelstatus')

kernels_status = sa.sql.table('kernels',
                              sa.Column('status', curr_kernelstatus, nullable=False))


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.execute("ALTER TYPE kernelstatus ADD VALUE 'PENDING'")
    op.create_table('scaling_groups',
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('driver', sa.String(length=64), nullable=False),
    sa.Column('job_scheduler', sa.String(length=64), nullable=False)
    )
    op.create_index(op.f('ix_scaling_groups_is_active'), 'scaling_groups', ['is_active'], unique=False)
    op.create_index(op.f('ix_scaling_groups_name'), 'scaling_groups', ['name'], unique=True)

    op.get_bind().execute(
        scaling_groups.insert().values([
            {
                'name': 'default',
                'is_active': True,
                'created_at': datetime.now(),
                'driver': '',
                'job_scheduler': '',
            },
            {
                'name': 'codeonweb',
                'is_active': True,
                'created_at': datetime.now(),
                'driver': '',
                'job_scheduler': '',
            }
        ])
    )

    # op.execute('ALTER TYPE kernelstatus RENAME TO kernelstatus_old;')
    # curr_kernelstatus.create(op.get_bind())
    op.add_column('agents', sa.Column('scaling_group', sa.String(length=64), server_default='default', nullable=False))
    op.create_index(op.f('ix_agents_scaling_group'), 'agents', ['scaling_group'], unique=False)
    op.create_foreign_key(op.f('fk_agents_scaling_group_scaling_groups'), 'agents', 'scaling_groups', ['scaling_group'], ['name'])
    op.add_column('kernels', sa.Column('mounts', sa.ARRAY(sa.String()), nullable=True))
    op.add_column('kernels', sa.Column('scaling_group', sa.String(length=64), server_default='default', nullable=False))
    op.create_index(op.f('ix_kernels_scaling_group'), 'kernels', ['scaling_group'], unique=False)
    op.create_foreign_key(op.f('fk_kernels_scaling_group_scaling_groups'), 'kernels', 'scaling_groups', ['scaling_group'], ['name'])
    # op.alter_column('kernels', column_name='status', type_=sa.Enum(*curr_kernelstatus_choices, name='kernelstatus'),
    #                 postgresql_using='status::text::kernelstatus')
    # op.alter_column('kernels', 'status',
    #                 existing_type=postgresql.ENUM(),
    #                 nullable=False,
    #                 existing_server_default='TERMINATED')
    # op.execute("ALTER TABLE kernels ALTER COLUMN status SET DATA TYPE kernelstatus "
    #            "USING CASE WHEN status IS NOT NULL THEN status::text::kernelstatus "
    #            "ELSE 'PREPARING' END")
    # op.alter_column('kernels', 'status',
    #                 existing_type=postgresql.ENUM(),
    #                 nullable=True)
    # op.execute('DROP TYPE kernelstatus_old;')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.execute(kernels_status.update().where(kernels_status.c.status == 'PENDING').values(status='PREPARING'))
    # op.execute('ALTER TYPE kernelstatus RENAME TO tmp_kernelstatus')
    # prev_kernelstatus.create(op.get_bind())
    # op.alter_column('kernels', column_name='status', type_=sa.Enum(*prev_kernelstatus_choices, name='kernelstatus'),
    #                 postgresql_using='status::text::kernelstatus')
    op.drop_column('kernels', 'mounts')
    op.drop_constraint(op.f('fk_agents_scaling_group_scaling_groups'), 'agents', type_='foreignkey')
    op.drop_index(op.f('ix_agents_scaling_group'), table_name='agents')
    op.drop_column('agents', 'scaling_group')
    op.drop_constraint(op.f('fk_kernels_scaling_group_scaling_groups'), 'kernels', type_='foreignkey')
    op.drop_index(op.f('ix_kernels_scaling_group'), table_name='kernels')
    op.drop_column('kernels', 'scaling_group')
    op.drop_index(op.f('ix_scaling_groups_name'), table_name='scaling_groups')
    op.drop_index(op.f('ix_scaling_groups_is_active'), table_name='scaling_groups')
    op.drop_table('scaling_groups')
    # op.execute('DROP TYPE tmp_kernelstatus')
    # ### end Alembic commands ###
