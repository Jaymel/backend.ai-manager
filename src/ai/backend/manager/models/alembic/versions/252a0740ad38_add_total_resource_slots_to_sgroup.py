"""add_total_resource_slots_to_sgroups

Revision ID: 252a0740ad38
Revises: 3f1dafab60b2
Create Date: 2019-10-01 13:21:41.134247

"""
import textwrap
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = '252a0740ad38'
down_revision = '3f1dafab60b2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # ### end Alembic commands ###
    op.add_column(
        'sgroups_for_domains',
        sa.Column('total_resource_slots',
                  postgresql.JSONB(astext_type=sa.Text()),
                  nullable=True)
    )
    op.add_column(
        'sgroups_for_groups',
        sa.Column('total_resource_slots',
                  postgresql.JSONB(astext_type=sa.Text()),
                  nullable=True)
    )
    op.add_column(
        'sgroups_for_keypairs',
        sa.Column('total_resource_slots',
                  postgresql.JSONB(astext_type=sa.Text()),
                  nullable=True)
    )

    print('\nSet sgroups_for_domain\'s total_resource_slots with empty dictionary.')
    query1 = textwrap.dedent('''\
        UPDATE sgroups_for_domains SET total_resource_slots = '{}'::jsonb;
    ''')
    query2 = textwrap.dedent('''\
        UPDATE sgroups_for_groups SET total_resource_slots = '{}'::jsonb;
    ''')
    query3 = textwrap.dedent('''\
        UPDATE sgroups_for_keypairs SET total_resource_slots = '{}'::jsonb;
    ''')
    connection = op.get_bind()
    connection.execute(query1)
    connection.execute(query2)
    connection.execute(query3)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # ### end Alembic commands ###
    op.drop_column('sgroups_for_domains', 'total_resource_slots')
    op.drop_column('sgroups_for_groups', 'total_resource_slots')
    op.drop_column('sgroups_for_keypairs', 'total_resource_slots')
